<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>binary on Mezalor</title>
    <link>http://example.org/tags/binary/</link>
    <description>Recent content in binary on Mezalor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Thu, 12 Nov 2020 15:47:00 +0100</lastBuildDate><atom:link href="http://example.org/tags/binary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mysql, données binaires</title>
      <link>http://example.org/posts/2020-11-12-mysql-donnees-binaires/</link>
      <pubDate>Thu, 12 Nov 2020 15:47:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2020-11-12-mysql-donnees-binaires/</guid>
      <description>Dans certains cas, la commande LOAD_FILE n&amp;rsquo;est pas utilisable (problèmes de droits, etc..) pour alimenter un blob.
Dans ce cas, il peut être intéressant de convertir un fichier binaire (ici un fichier texte) en séquence hexadécimale&amp;hellip;
$ cat lorem.txt Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer at lorem pharetra, pulvinar quam nec, efficitur ligula. Donec imperdiet aliquam rutrum. Aenean metus est, cursus eget auctor sit amet, vehicula id lorem.</description>
    </item>
    
    <item>
      <title>python, faire en sorte que stdin/stdout lisent et écrivent en binaire</title>
      <link>http://example.org/posts/2012-10-10-python-faire-en-sorte-que-stdin-stdout-lisent-et-ecrivent-en-binaire/</link>
      <pubDate>Wed, 10 Oct 2012 13:34:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2012-10-10-python-faire-en-sorte-que-stdin-stdout-lisent-et-ecrivent-en-binaire/</guid>
      <description>J&amp;rsquo;ai écrit un petit programme qui s&amp;rsquo;inspire de cut en python.
La lecture et l&amp;rsquo;écriture pouvant se faire sur l&amp;rsquo;entrée/sortie standard (sources ucut), j&amp;rsquo;avais des problèmes de &amp;ldquo;&amp;lsquo;ascii&amp;rsquo; codec can&amp;rsquo;t decode byte&amp;rdquo;&amp;hellip;
Pour y remédier, j&amp;rsquo;ai &amp;ldquo;transformé&amp;rdquo; les flux standard (mode texte) en flux binaires de la manière suivante :
import sys import os sys.stdin = os.fdopen(sys.stdin.fileno(), &amp;#39;rb&amp;#39;, 0) sys.stdout = os.fdopen(sys.stdout.fileno(), &amp;#39;wb&amp;#39;, 0) </description>
    </item>
    
  </channel>
</rss>

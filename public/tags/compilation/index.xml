<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>compilation on Mezalor</title>
    <link>http://example.org/tags/compilation/</link>
    <description>Recent content in compilation on Mezalor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Sat, 27 Aug 2016 06:18:00 +0100</lastBuildDate><atom:link href="http://example.org/tags/compilation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java, accéder à une méthode de même nom dans la classe encapsulande depuis une classe anonyme</title>
      <link>http://example.org/posts/2016-08-27-java-acceder-a-une-methode-de-meme-nom-dans-la-classe-encapsulande-depuis-une-classe-anonyme/</link>
      <pubDate>Sat, 27 Aug 2016 06:18:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2016-08-27-java-acceder-a-une-methode-de-meme-nom-dans-la-classe-encapsulande-depuis-une-classe-anonyme/</guid>
      <description>Pour ce faire, il faut utiliser ParamTransform.this pour que la compilation n&amp;rsquo;échoue pas.
public abstract class ParamTransform&amp;lt;Init,In,Out&amp;gt; implements Transform&amp;lt;Init,Transform&amp;lt;In,Out&amp;gt;&amp;gt; { public abstract Out apply(Init values, In value); public final Transform&amp;lt;In, Out&amp;gt; apply(final Init values) { return new Transform&amp;lt;In, Out&amp;gt;() { public Out apply(In value) { return ParamTransform.this.apply(values, value); } }; } } </description>
    </item>
    
  </channel>
</rss>

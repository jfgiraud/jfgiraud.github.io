<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>singulier on Mezalor</title>
    <link>http://example.org/tags/singulier/</link>
    <description>Recent content in singulier on Mezalor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Thu, 19 Feb 2015 15:15:00 +0100</lastBuildDate><atom:link href="http://example.org/tags/singulier/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java, gestion des messages au singulier et pluriel</title>
      <link>http://example.org/posts/2015-02-19-java-gestion-des-messages-au-singulier-et-pluriel/</link>
      <pubDate>Thu, 19 Feb 2015 15:15:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2015-02-19-java-gestion-des-messages-au-singulier-et-pluriel/</guid>
      <description>Java propose depuis longtemps la possibilité de gérer les singuliers/pluriels via MessageFormat.
Vous trouverez ci-dessous un exemple au travers de tests unitaires.
Maintenant, fini les rustines dans le code pour les libellés !
import junit.framework.TestCase; import java.text.MessageFormat; public class FooTest extends TestCase { public void testPlural() { String formatPattern = &amp;#34;The directory {0} contains {1,choice,0#no file|1#one file|1&amp;lt;{1,number,integer} files}.&amp;#34;; assertEquals(&amp;#34;The directory XYZ contains no file.&amp;#34;, MessageFormat.format(formatPattern, &amp;#34;XYZ&amp;#34;, 0)); assertEquals(&amp;#34;The directory XYZ contains one file.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>date on Mezalor</title>
    <link>http://example.org/tags/date/</link>
    <description>Recent content in date on Mezalor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Wed, 17 Oct 2018 10:07:00 +0100</lastBuildDate><atom:link href="http://example.org/tags/date/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bash, script seqdate</title>
      <link>http://example.org/posts/2018-10-17-bash-script-seqdate/</link>
      <pubDate>Wed, 17 Oct 2018 10:07:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2018-10-17-bash-script-seqdate/</guid>
      <description>Script réutilisable pour générer des dates avec date et seq
#!/bin/bash usage() { local msg=&amp;#34;$1&amp;#34; if [[ -n &amp;#34;$msg&amp;#34; ]]; then echo $msg fi echo &amp;#34;usage: $0 &amp;lt;FROM=YYYY-MM-DD&amp;gt; &amp;lt;TO=YYYY-MM-DD&amp;gt;&amp;#34; &amp;gt;&amp;amp;2 exit 1 } if [[ &amp;#34;$#&amp;#34; -ne 2 ]]; then usage fi FORMAT=&amp;#34;%Y-%m-%d&amp;#34; FROM=$(date --d &amp;#34;$1&amp;#34; +&amp;#34;$FORMAT&amp;#34;) TO=$(date --d &amp;#34;$2&amp;#34; +&amp;#34;$FORMAT&amp;#34;) if [[ &amp;#34;$FROM&amp;#34; &amp;gt; &amp;#34;$TO&amp;#34; ]]; then read FROM TO &amp;lt;&amp;lt;&amp;lt; &amp;#34;$TO $FROM&amp;#34; fi echo $FROM while [[ &amp;#34;$FROM&amp;#34; !</description>
    </item>
    
    <item>
      <title>bash, générer des dates avec les commandes seq et date</title>
      <link>http://example.org/posts/2018-10-16-bash-generer-des-dates-avec-les-commandes-seq-et-date/</link>
      <pubDate>Tue, 16 Oct 2018 11:28:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2018-10-16-bash-generer-des-dates-avec-les-commandes-seq-et-date/</guid>
      <description>Parfois il peut être utile d&amp;rsquo;avoir une liste de dates pour appeler un script particulier.
Cette liste peut être générée à partir des commandes seq et date comme dans l&amp;rsquo;exemple ci-dessous.
$ for i in $(seq 0 5); do date -d &amp;#34;20180705 $i day&amp;#34; +&amp;#39;%Y%m%d&amp;#39;; done 20180705 20180706 20180707 20180708 20180709 20180710 $ for i in $(seq 0 5); do date -d &amp;#34;20180705 $i day ago&amp;#34; +&amp;#39;%Y%m%d&amp;#39;; done 20180705 20180704 20180703 20180702 20180701 20180630 </description>
    </item>
    
  </channel>
</rss>

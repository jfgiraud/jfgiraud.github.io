<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>distance on Mezalor</title>
    <link>http://example.org/tags/distance/</link>
    <description>Recent content in distance on Mezalor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Fri, 13 Nov 2020 12:24:00 +0100</lastBuildDate><atom:link href="http://example.org/tags/distance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python, distance de levenshtein</title>
      <link>http://example.org/posts/2020-11-13-python-distance-de-levenshtein/</link>
      <pubDate>Fri, 13 Nov 2020 12:24:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2020-11-13-python-distance-de-levenshtein/</guid>
      <description>La distance de Levenshtein est une distance, au sens mathématique du terme, donnant une mesure de la différence entre deux chaînes de caractères. Elle est égale au nombre minimal de caractères qu&amp;rsquo;il faut supprimer, insérer ou remplacer pour passer d&amp;rsquo;une chaîne à l&amp;rsquo;autre.
def levenshtein(a,b): &amp;#34;Calculates the Levenshtein distance between a and b.&amp;#34; n, m = len(a), len(b) if n &amp;gt; m: # Make sure n &amp;lt;= m, to use O(min(n,m)) space a,b = b,a n,m = m,n current = range(n+1) for i in range(1,m+1): previous, current = current, [i]+[0]*n for j in range(1,n+1): add, delete = previous[j]+1, current[j-1]+1 change = previous[j-1] if a[j-1] !</description>
    </item>
    
  </channel>
</rss>

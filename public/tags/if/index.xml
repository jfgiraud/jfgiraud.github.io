<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>if on Mezalor</title>
    <link>http://example.org/tags/if/</link>
    <description>Recent content in if on Mezalor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Wed, 14 Jan 2015 16:47:00 +0100</lastBuildDate><atom:link href="http://example.org/tags/if/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bash, comment faire pour exécuter du code en fonction de la présence de fichier*s*</title>
      <link>http://example.org/posts/2015-01-14-bash-comment-faire-pour-executer-du-code-en-fonction-de-la-presence-de-fichier-s/</link>
      <pubDate>Wed, 14 Jan 2015 16:47:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2015-01-14-bash-comment-faire-pour-executer-du-code-en-fonction-de-la-presence-de-fichier-s/</guid>
      <description>Bash met à disposition des opérateurs pour tester l&amp;rsquo;existence de fichiers, leur type, droits d&amp;rsquo;accès&amp;hellip;
Toutefois, dans certains cas, on peut souhaiter tester la présence de fichiers et appliquer un traitement si l&amp;rsquo;un d&amp;rsquo;entre eux existe.
On peut utiliser la commande ls couplée à if comme le montre l&amp;rsquo;exemple ci-dessous
$ touch /tmp/{a,b}.done $ if ls /tmp/*.done &amp;amp;&amp;gt; /dev/null; then echo des fichiers done existent; fi des fichiers done existent $ if ls /tmp/xxx*.</description>
    </item>
    
    <item>
      <title>sql, gérer les conflits lors des inserts</title>
      <link>http://example.org/posts/2012-10-12-sql-gerer-les-conflits-lors-des-inserts/</link>
      <pubDate>Fri, 12 Oct 2012 13:28:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2012-10-12-sql-gerer-les-conflits-lors-des-inserts/</guid>
      <description>Lors d&amp;rsquo;un insert, si la clé primaire existe déjà, il est possible de faire un traitement comme dans l&amp;rsquo;exemple ci-dessous.
insert into enveloppesTTS (enveloppe, tts) select enveloppe, &amp;#39;&amp;#39; as tts from enveloppes on duplicate key update enveloppesTTS.tts=if(enveloppesTTS.tts&amp;lt;&amp;gt;&amp;#39;&amp;#39;,enveloppesTTS.tts,values(tts)); Ici, on tente de peupler la table enveloppesTTS avec des valeurs.
Si l&amp;rsquo;entrée n&amp;rsquo;existe pas, on la crée.
Sinon on met à jour un champ de cette table uniquement si sa valeur n&amp;rsquo;est pas déjà renseigné.</description>
    </item>
    
    <item>
      <title>bash, cas conditionel suivant la présence ou non d&#39;un texte dans un fichier</title>
      <link>http://example.org/posts/2012-09-06-bash-cas-conditionel-suivant-la-presence-ou-non-d-un-texte-dans-un-fichier/</link>
      <pubDate>Thu, 06 Sep 2012 10:43:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2012-09-06-bash-cas-conditionel-suivant-la-presence-ou-non-d-un-texte-dans-un-fichier/</guid>
      <description>Cela se fait simplement avec un grep&amp;hellip;
$ if grep -Fq $mot $fichier; then echo &amp;#34;Le mot est dans le fichier&amp;#34; else echo &amp;#34;Le mot n&amp;#39;est pas dans le fichier&amp;#34; fi Bien que le test semble inversé, il est correct car la sortie du grep avec un status à 0 est un succès.
Le paragraphe Conditional Shell Control Structures de la page http://teaching.idallen.com/dat2330/04f/notes/exit_status.txt l&amp;rsquo;explique très bien.</description>
    </item>
    
  </channel>
</rss>

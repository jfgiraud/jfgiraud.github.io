<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>regexp on Mezalor</title>
    <link>http://example.org/tags/regexp/</link>
    <description>Recent content in regexp on Mezalor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Wed, 07 Oct 2020 22:50:00 +0100</lastBuildDate><atom:link href="http://example.org/tags/regexp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java, regexp nommées</title>
      <link>http://example.org/posts/2020-10-07-java-regexp-nommees/</link>
      <pubDate>Wed, 07 Oct 2020 22:50:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2020-10-07-java-regexp-nommees/</guid>
      <description>Nommer un groupe et l&amp;rsquo;utiliser :
@Test public void testFoo() { Pattern p = Pattern.compile(&amp;#34;Voici le nombre : (?&amp;lt;nombre&amp;gt;\\d+)&amp;#34;); Matcher m = p.matcher(&amp;#34;Voici le nombre : 123&amp;#34;); assertTrue(m.matches()); assertEquals(&amp;#34;123&amp;#34;, m.group(&amp;#34;nombre&amp;#34;)); } </description>
    </item>
    
    <item>
      <title>bash, vérifier si une variable matche une regexp</title>
      <link>http://example.org/posts/2012-10-10-bash-verifier-si-une-variable-matche-une-regexp/</link>
      <pubDate>Wed, 10 Oct 2012 10:09:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2012-10-10-bash-verifier-si-une-variable-matche-une-regexp/</guid>
      <description>On peut facilement vérifier si une donnée contenue dans une variable est au bon format.
Dans l&amp;rsquo;exemple ci-dessous, on vérifie si le numéro de version fourni est correct.
if [[ ! &amp;#34;$version&amp;#34; =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then echo &amp;#34;Le numéro de version donné &amp;#39;$version&amp;#39; n&amp;#39;a pas le bon format.&amp;#34; exit 1 fi Dans celui-ci si la valeur contient localhost ou itg
[[ $environnement =~ localhost|itg ]] &amp;amp;&amp;amp; echo 1 Attention, la regexp n&amp;rsquo;est pas entre quote ni double-quote.</description>
    </item>
    
    <item>
      <title>Bash, pattern substitution</title>
      <link>http://example.org/posts/2012-08-08-bash-pattern-substitution/</link>
      <pubDate>Wed, 08 Aug 2012 16:21:00 +0100</pubDate>
      
      <guid>http://example.org/posts/2012-08-08-bash-pattern-substitution/</guid>
      <description>Le manuel bash présente les syntaxes suivantes (voir)
${parameter#word} et ${parameter##word} pour supprimer le plus court et le plus long préfix ${parameter%word} et ${parameter%%word} pour supprimer le plus court et le plus long suffixe ${parameter/pattern/string} pour substituer une chaîne à un pattern. Il faut savoir que word peut être une regexp dans les 2 premiers cas. Mais il faut surtout savoir que la syntaxe du pattern diffère de celles que l&amp;rsquo;on connaît généralement&amp;hellip;</description>
    </item>
    
  </channel>
</rss>
